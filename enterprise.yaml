openapi: 3.0.2
info:
    title: Shoutout Enterprise API
    version: 1.0.0
    description: Shoutout for enterprises
    contact:
        name: ShoutOUT Labs
        url: 'https://getshoutout.com'
        email: support@getshoutout.com
    x-logo:
        url: 'https://developers.getshoutout.com/images/logo.svg'
        backgroundColor: '#394f5a'
        altText: Shoutout logo
servers:
    -
        url: 'https://api.getshoutout.com'
        description: ShoutOUT API
paths:
    /customers:
        summary: Customer management
        get:
            tags:
                - Customers
            parameters:
                -
                    name: skip
                    description: Number of records to skip
                    schema:
                        type: number
                    in: query
                -
                    name: limit
                    description: Number of records to be returned in the response. Defult is 10
                    schema:
                        type: number
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/CustomerCreate'
                            examples:
                                Example:
                                    value:
                                        -
                                            loyalty_id: some text
                                            name: some text
                                            points: 57.32
                                            tier: some text
                                            tier_points: 77.17
                                        -
                                            loyalty_id: some text
                                            name: some text
                                            points: 56.08
                                            tier: some text
                                            tier_points: 70.6
                    description: Success
            operationId: getCustomers
            summary: Get customers
            description: Get the list of loyalty customers.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CustomerCreate'
                        examples:
                            Example:
                                value:
                                    loyalty_id: some text
                                    name: some text
                                    mobile_number: some text
                                    email: some text
                required: true
            tags:
                - Customers
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CustomerCreate'
                            examples:
                                Example:
                                    value:
                                        loyalty_id: some text
                                        name: some text
                                        points: 3.8
                                        tier: some text
                                        tier_points: 30.44
                    description: Customer created
            operationId: createCustomer
            summary: Create customer
            description: Create customer with pre-defined and user defined attributes
    /rewards:
        get:
            tags:
                - Rewards
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Reward'
                            examples:
                                reward response:
                                    value:
                                        -
                                            _id: 5c7cb58fe5cd6a27acff234
                                            name: Reward1
                                            description: description
                                            type: voucher
                                            isRedeemable: true
                                            points: 2500
                                            status: 0
                                            imageUrls:
                                                - 'https://getshoutout.com/casx.jpg'
                                            metadata:
                                                totalCount: 0
                                                usedCount: 0
                                                amountPerRedemption: 0
                                                countPerRedemption: 1
                                                couponResult:
                                                    fieldCount: 0
                                                    affectedRows: 1
                                                    insertId: 0
                                                    serverStatus: 2
                                                    warningCount: 0
                                                    message: ''
                                                    protocol41: true
                                                    changedRows: 0
                                            ownerId: '43'
                                            createdBy: '43'
                                            createdOn: '2019-02-25T05:09:18.628Z'
                    description: return rewards as an array
            security:
                -
                    APIKey: []
            summary: Get rewards
            description: Get list of all rewards
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RewardCreate'
                        examples:
                            create redeemable voucher reward:
                                value:
                                    imageUrls:
                                        - >-
                                            https://s3.amazonaws.com/gallery.getshoutout.com/images/43/9656b64d-76e0-4e12-82fc-6fec4c6b0a68.png
                                    name: Reward 2
                                    points: '100'
                                    type: voucher
                                    metadata:
                                        amountPerRedemptionSeasonal: []
                                        amountPerRedemption: 0
                                        dailyRedemptionLimit: -1
                                    userRedeemable: true
                required: true
            tags:
                - Rewards
            responses:
                '201':
                    $ref: '#/components/responses/RewardsResponse'
            security:
                -
                    APIKey: []
            summary: Create reward
            description: Create a new reward
    '/rewards/{rewardId}':
        get:
            tags:
                - Rewards
            responses:
                '200':
                    $ref: '#/components/responses/RewardsResponse'
            security:
                -
                    APIKey: []
            summary: Get reward
            description: Get a reward by reward id
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Reward'
                required: true
            tags:
                - Rewards
            responses:
                '200':
                    $ref: '#/components/responses/RewardsResponse'
            security:
                -
                    APIKey: []
            summary: Update reward
            description: Update a reward by reward id
        delete:
            tags:
                - Rewards
            responses:
                '200':
                    description: empty response
            security:
                -
                    APIKey: []
            summary: Delete reward
            description: Delete a reward by reward id
        parameters:
            -
                name: rewardId
                description: reward id
                schema:
                    type: string
                in: path
                required: true
    '/customers/{customerId}':
        get:
            tags:
                - Customers
            parameters:
                -
                    name: customerId
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CustomerCreate'
                            examples:
                                Example:
                                    value:
                                        loyalty_id: some text
                                        name: some text
                                        points: 87.68
                                        tier: some text
                                        tier_points: 34.99
                    description: Success
                '404':
                    description: Customer not found
            operationId: getCustomer
            summary: Get customer
            description: Get a single customer profile via the loyalty id
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CustomerCreate'
                        examples:
                            Example:
                                value:
                                    name: some text
                required: true
            tags:
                - Customers
            parameters:
                -
                    name: customerId
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CustomerCreate'
                            examples:
                                Example:
                                    value:
                                        loyalty_id: some text
                                        name: some text
                                        points: 21.82
                                        tier: some text
                                        tier_points: 14.59
                    description: Success
            operationId: updateCustomer
            summary: Update customer
            description: Update customer details.
        delete:
            tags:
                - Customers
            parameters:
                -
                    name: customerId
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Success
            operationId: deactivateCustomer
            summary: De-activate customer
            description: De-activate a csutomer as he/she is no longer be able to interact with the loyalty program
        parameters:
            -
                name: customerId
                description: customer id
                schema:
                    type: string
                in: path
                required: true
    /products:
        summary: 'Get list of products, create a new product'
        description: 'Get list of products, create a new product'
        get:
            tags:
                - Products
            parameters:
                -
                    examples:
                        Example skip:
                            value: '0'
                    name: skip
                    description: Number of records to skip
                    schema:
                        type: integer
                    in: query
                -
                    examples:
                        Example limit:
                            value: '100'
                    name: limit
                    description: Number of records to be returned in the response. Defult is 10
                    schema:
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Product'
                    description: products list
            security:
                -
                    APIKey: []
            summary: Get products
            description: Get list of products
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Product'
                required: true
            tags:
                - Products
            responses:
                '201':
                    $ref: '#/components/responses/ProductResponse'
            security:
                -
                    APIKey: []
            summary: Create product
            description: Create a new product
    /points:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PointsUpdate'
                        examples:
                            Bill points collect example:
                                value:
                                    userId: some text
                                    activityData:
                                        bill: 19.96
                                        bill_number: some text
                                        employee: some text
                                        location: some text
                            Direct points collect example:
                                value:
                                    userId: some text
                                    activityData:
                                        employee: some text
                                        location: some text
                                        points: 17.57
                            Points redeem example:
                                value:
                                    userId: some text
                                    activityData:
                                        employee: some text
                                        location: some text
                                        points: 28.94
                required: true
            tags:
                - Points
            parameters:
                -
                    name: action
                    description: |
                        Point collection or redemption
                    schema:
                        enum:
                            - collect
                            - redeem
                        type: string
                    in: query
                    required: true
            responses:
                '200':
                    $ref: '#/components/responses/PointsUpdateResponse'
            operationId: updatePoints
            summary: Collect or redeem points
            description: This method can be used for both points earning and redemption
    '/products/{productId}':
        description: 'Get, update and delete a product by id'
        get:
            tags:
                - Products
            responses:
                '200':
                    $ref: '#/components/responses/ProductResponse'
            security:
                -
                    APIKey: []
            summary: Get product
            description: Get the product by product id
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Product'
                required: true
            tags:
                - Products
            responses:
                '200':
                    $ref: '#/components/responses/ProductResponse'
            security:
                -
                    APIKey: []
            summary: Update product
            description: Update the product by product id
        delete:
            tags:
                - Products
            responses:
                '200':
                    description: empty response
            security:
                -
                    APIKey: []
            summary: Delete product
            description: Delete the product by product id
        parameters:
            -
                name: productId
                description: product id
                schema:
                    type: string
                in: path
                required: true
    /transactions:
        get:
            tags:
                - Transactions
            parameters:
                -
                    name: skip
                    description: Number of transactions to skip. Default is 0
                    schema:
                        type: number
                    in: query
                -
                    name: limit
                    description: Number of transactions to limit. Default is 10
                    schema:
                        type: number
                    in: query
            responses:
                '200':
                    $ref: '#/components/responses/TransactionsResponse'
            operationId: getTransactions
            summary: Get transactions
            description: Get a list of loyalty transactions
    /config:
        get:
            tags:
                - Config
            responses:
                '200':
                    $ref: '#/components/responses/ConfigurationResponse'
            security:
                -
                    APIKey: []
            summary: Get configuration
            description: Get the current configuration
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Configuration'
                required: true
            tags:
                - Config
            responses:
                '200':
                    $ref: '#/components/responses/ConfigurationResponse'
            security:
                -
                    APIKey: []
            summary: Update configuration
            description: >-
                Update existing configuration. Can be used to update points, rewards and product based points,
                tiers based configurations.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Configuration'
                required: true
            tags:
                - Config
            responses:
                '201':
                    $ref: '#/components/responses/ConfigurationResponse'
            security:
                -
                    APIKey: []
            summary: Create configuration
            description: Create a new configuration.
        delete:
            tags:
                - Config
            responses:
                '200':
                    description: Empty response
            security:
                -
                    APIKey: []
            summary: Delete configuration
            description: Delete current configuration.
    /activities:
        get:
            tags:
                - Activities
            parameters:
                -
                    name: skip
                    description: Number of activities to skip. Default is 0
                    schema:
                        type: number
                    in: query
                -
                    name: limit
                    description: Number of activities to limit. Default is 10
                    schema:
                        type: number
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Activity'
                            examples:
                                Example:
                                    value:
                                        -
                                            userId: some text
                                            activityName: some text
                                            activityData: {}
                                        -
                                            userId: some text
                                            activityName: some text
                                            activityData: {}
                    description: Success
            operationId: getActivities
            summary: Get activities
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Activity'
                        examples:
                            Example:
                                value:
                                    userId: some text
                                    activityName: some text
                                    activityData: {}
                required: true
            tags:
                - Activities
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Activity'
                            examples:
                                Example:
                                    value:
                                        userId: some text
                                        activityName: some text
                                        activityData: {}
                    description: Created
            operationId: createActivity
            summary: Create activity
components:
    schemas:
        Transaction:
            description: ''
            type: object
            properties:
                id:
                    description: ''
                    type: string
                points:
                    description: ''
                    type: number
                bill:
                    description: ''
                    type: number
                tier_points:
                    description: ''
                    type: number
                loyaltyId:
                    description: ''
                    type: string
                customerId:
                    description: ''
                    type: string
                billNumber:
                    description: ''
                    type: string
        Object:
            description: JSON type
            type: object
            example:
                imageUrls:
                    - >-
                        https://s3.amazonaws.com/gallery.getshoutout.com/images/43/9656b64d-76e0-4e12-82fc-6fec4c6b0a68.png
                name: Reward 2
                points: 100
                type: voucher
                metadata:
                    amountPerRedemptionSeasonal: []
                    amountPerRedemption: 0
                    dailyRedemptionLimit: -1
                userRedeemable: true
                status: 0
        Product:
            title: Root Type for Product
            description: ''
            required:
                - id
                - name
                - price
            type: object
            properties:
                id:
                    description: product id
                    type: string
                name:
                    description: product name
                    type: string
                price:
                    description: product price
                    type: integer
                metadata:
                    $ref: '#/components/schemas/Object'
                    description: additional metadata
                    properties:
                        sku:
                            type: string
            example:
                id: product id
                name: product name
                price: 0
                metadata:
                    sku: some text
        PointsUpdateActivityData:
            description: ''
            required:
                - bill
                - points
            type: object
            properties:
                bill:
                    description: Bill amount
                    type: number
                bill_number:
                    description: Reference number of the bill/invoice
                    type: string
                employee:
                    description: Name of the employee who entered the bill
                    type: string
                location:
                    description: Location of the store from where the bill is recorded
                    type: string
                points:
                    description: ''
                    type: number
            example:
                bill: 9.13
                bill_number: some text
                employee: some text
                location: some text
                points: 31.22
        PointsUpdate:
            description: ''
            required:
                - userId
                - activityData
            type: object
            properties:
                userId:
                    description: ''
                    type: string
                activityData:
                    $ref: '#/components/schemas/PointsUpdateActivityData'
                    description: ''
            example:
                userId: some text
                activityData:
                    bill: 38.17
                    bill_number: some text
                    employee: some text
                    location: some text
                    points: 53.94
        PointsUpdateResponse:
            description: ''
            type: object
            properties:
                points:
                    description: ''
                    type: number
                balance_points:
                    description: ''
                    type: number
                loyalty_id:
                    description: ''
                    type: string
        RewardCreate:
            title: Root Type for Reward
            description: ''
            required:
                - imageUrls
                - name
                - points
                - status
                - type
                - userRedeemable
            type: object
            properties:
                imageUrls:
                    description: image urls array
                    type: array
                    items:
                        type: string
                name:
                    description: reward name
                    type: string
                points:
                    description: number of redeemable points required to redeem the reward
                    type: integer
                type:
                    description: Reward type
                    type: string
                metadata:
                    $ref: '#/components/schemas/Object'
                    properties:
                        amountPerRedemptionSeasonal:
                            type: array
                            items: {}
                        amountPerRedemption:
                            format: int32
                            type: integer
                        dailyRedemptionLimit:
                            format: int32
                            type: integer
                userRedeemable:
                    description: whether user allowed to redeem the reward
                    type: boolean
                status:
                    description: reward published/ unpublished status
                    type: integer
            example:
                imageUrls:
                    - imageurl1
                    - imageurl2
                name: reward name
                points: 0
                type: voucher
                metadata:
                    amountPerRedemptionSeasonal: []
                    amountPerRedemption: 0
                    dailyRedemptionLimit: -1
                userRedeemable: true
                status: 0
        Reward:
            title: Root Type for Reward
            description: ''
            required:
                - _id
                - imageUrls
                - name
                - points
                - status
                - type
                - userRedeemable
            type: object
            properties:
                _id:
                    description: Reward Id
                    type: string
                imageUrls:
                    description: list of images
                    type: array
                    items:
                        type: string
                name:
                    description: Reward name
                    type: string
                points:
                    description: no of redeemable points required to redeem the reward
                    type: integer
                type:
                    description: Reward type
                    type: string
                metadata:
                    $ref: '#/components/schemas/Object'
                    description: additional metadata
                    properties:
                        amountPerRedemptionSeasonal:
                            type: array
                            items: {}
                        amountPerRedemption:
                            format: int32
                            type: integer
                        dailyRedemptionLimit:
                            format: int32
                            type: integer
                userRedeemable:
                    description: Reward is redeemable or not
                    type: boolean
                status:
                    format: int32
                    description: Reward published(1)/Unpublished(0) status
                    type: integer
            example:
                _id: reward id
                imageUrls:
                    - imageurl1
                    - imageurl2
                name: reward name
                points: 0
                type: voucher
                metadata:
                    amountPerRedemptionSeasonal: []
                    amountPerRedemption: 0
                    dailyRedemptionLimit: -1
                userRedeemable: true
                status: 0
        Configuration:
            title: Root Type for Configuration
            description: ''
            type: object
            properties:
                points:
                    $ref: '#/components/schemas/Object'
                    description: Points config
                    properties:
                        alias:
                            type: string
                        custom_purchasePoint:
                            format: int32
                            type: integer
                        merchantBonus:
                            format: int32
                            type: integer
                        minRedeemBalance:
                            format: int32
                            type: integer
                        rate:
                            format: double
                            type: number
                        referralBonus:
                            format: int32
                            type: integer
                        registrationBonus:
                            format: int32
                            type: integer
                rewards:
                    $ref: '#/components/schemas/Object'
                    description: Rewards config
                    properties:
                        merchantName:
                            type: string
                        portalCoverImageUrl:
                            type: string
                        portalImageUrl:
                            type: string
                        portalName:
                            type: string
                        portalUrl:
                            type: string
                tiers:
                    $ref: '#/components/schemas/Object'
                    description: Tier config
                    properties:
                        config:
                            type: object
                            properties:
                                calculationWindow:
                                    format: int32
                                    type: integer
                                immediateTierDowngrade:
                                    type: boolean
                                immediateTierUpdate:
                                    type: boolean
                        data:
                            type: object
                            properties:
                                tierId:
                                    type: object
                                    properties:
                                        benefits:
                                            type: array
                                            items:
                                                type: string
                                        imageUrl:
                                            type: string
                                        name:
                                            type: string
                                        points:
                                            format: int32
                                            type: integer
            example:
                points:
                    alias: Points
                    custom_purchasePoint: 0
                    merchantBonus: 0
                    minRedeemBalance: 0
                    rate: 0.002
                    referralBonus: 0
                    registrationBonus: 0
                rewards:
                    merchantName: merchant name
                    portalCoverImageUrl: poratal cover image
                    portalImageUrl: portal image
                    portalName: Portal name
                    portalUrl: portal url
                tiers:
                    config:
                        calculationWindow: 365
                        immediateTierDowngrade: true
                        immediateTierUpdate: true
                    data:
                        tierId:
                            benefits:
                                - benefit 1
                            imageUrl: tier image
                            name: tier name
                            points: 0
        Activity:
            description: ''
            required:
                - activityName
                - userId
                - activityData
            type: object
            properties:
                userId:
                    description: ''
                    type: string
                activityName:
                    description: ''
                    type: string
                activityData:
                    $ref: '#/components/schemas/Object'
                    description: ''
            example:
                userId: some text
                activityName: some text
                activityData:
                    param1: val1
                    param2: val2
        Customer:
            description: ''
            type: object
            properties:
                loyalty_id:
                    description: Loyalty id of the customer
                    type: string
                name:
                    description: Name of the customer
                    type: string
                points:
                    description: Redeemable loyalty points
                    type: number
                tier:
                    description: Tier of the customer
                    type: string
                tier_points:
                    description: Tier points of the customers
                    type: number
            example:
                loyalty_id: some text
                name: some text
                points: 78.85
                tier: some text
                tier_points: 98.36
        CustomerCreate:
            description: ''
            type: object
            properties:
                loyalty_id:
                    description: Loyalty id of the customer
                    type: string
                name:
                    description: Name of the customer
                    type: string
                mobile_number:
                    description: ''
                    type: string
                email:
                    description: ''
                    type: string
                birth_date:
                    format: date-time
                    description: ''
                    type: string
                gender:
                    description: ''
                    enum:
                        - male
                        - female
                    type: string
                location:
                    description: ''
                    type: string
            example:
                loyalty_id: some text
                name: some text
                mobile_number: some text
                email: some text
                birth_date: '2018-02-10T09:30Z'
                gender: male
                location: some text
    responses:
        ProductResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Product'
            description: Product create/update response
        PointsUpdateResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/PointsUpdateResponse'
                    examples:
                        Example:
                            value:
                                points: 79.99
                                balance_points: 90.99
                                loyalty_id: some text
            description: Points Update
        RewardsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Reward'
            description: Reward
        ConfigurationResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Configuration'
            description: Configuration
        TransactionsResponse:
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/Transaction'
                    examples:
                        Example:
                            value:
                                -
                                    id: some text
                                    points: 75.75
                                    bill: 51.07
                                    transactionName: COLLECT_POINTS
                                    tierPoints: 72.76
                                    loyaltyId: some text
                                    customerId: some text
                                    billNumber: some text
                                -
                                    id: some text
                                    points: 32.66
                                    transactionName: REDEEM_POINTS
                                    tierPoints: 27.85
                                    loyaltyId: some text
                                    customerId: some text
            description: Transactions
    securitySchemes:
        APIKey:
            scheme: bearer
            type: http
tags:
    -
        name: Customers
        description: 'Customer is a loyalty user which is the primary entity in the loyalty platform. '
    -
        name: Rewards
        description: 'Digital, Voucher based rewards which can be redeemed for redeemable points. '
    -
        name: Products
        description: >-
            Create, update, delete and get products. Products are the list of products in the Point of Sales
            (PoS) or e-commerce application.
    -
        name: Config
        description: >-
            Loyalty configuration updates. Set points, rewards related and product based points, tiers
            configurations.
    -
        name: Points
        description: >-
            Points is a numeric score that is issued to the customer as a measure of their loyalty with the
            business. Points collected for bill values, are calculated based on a pre-defined conversion rate.
            Points collected directly via the points amount is directly accumulated to the total points. 


            Points can be directly redeemed by specifying the points amount.
    -
        name: Transactions
        description: Transactions are the point collections and point redemptions of the customers
    -
        name: Activities
        description: >-
            Activities are the actions performed by the customers. Loyalty platform automatically generates
            activities for the major loyalty events like registration, points collection and redemption,
            reward redemption etc
